
import java.sql.*;
import java.text.SimpleDateFormat;
import Project.ConnectionProvider;
import java.sql.Connection;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author User
 */
public class issueBook extends javax.swing.JFrame {

    /**
     * Creates new form issueBook
     */
    public issueBook() {
        initComponents();
        this.setLocationRelativeTo(null);
        //setExtendedState(JFrame.MAXIMIZED_BOTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bkID = new javax.swing.JTextField();
        stdID = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        issueDt = new com.toedter.calendar.JDateChooser();
        dueDt = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        closeButton = new javax.swing.JButton();
        issueButton = new javax.swing.JButton();
        BtndueBook = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        bkID.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(bkID, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 100, 180, 40));

        stdID.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(stdID, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 250, 180, 40));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("BOOK ID:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 100, 110, 40));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("STUDENT ID:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 260, -1, -1));

        issueDt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(issueDt, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 360, 180, 40));

        dueDt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(dueDt, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 490, 180, 40));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("ISSUE DATE:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 370, 130, 30));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("DUEDATE:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 500, 110, 30));

        closeButton.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        closeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cancel.png"))); // NOI18N
        closeButton.setText("CLOSE");
        closeButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        closeButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });
        getContentPane().add(closeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 620, 140, 60));

        issueButton.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        issueButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/issue icon.jpg"))); // NOI18N
        issueButton.setText("ISSUE");
        issueButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        issueButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        issueButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                issueButtonActionPerformed(evt);
            }
        });
        getContentPane().add(issueButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 620, 140, 60));

        BtndueBook.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        BtndueBook.setIcon(new javax.swing.ImageIcon(getClass().getResource("/duestudent.png"))); // NOI18N
        BtndueBook.setText("DUE BOOKS");
        BtndueBook.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        BtndueBook.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BtndueBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtndueBookActionPerformed(evt);
            }
        });
        getContentPane().add(BtndueBook, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 620, 200, 60));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/issuedatebg1.jpg"))); // NOI18N
        jLabel5.setText("jLabel5");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1290, 720));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        setVisible(false);
        new menupage().setVisible(true);
    }//GEN-LAST:event_closeButtonActionPerformed

    private void issueButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_issueButtonActionPerformed
        SimpleDateFormat dFormat = new SimpleDateFormat("dd-MM-yyyy");
        String BookId = bkID.getText();
        String studentID = stdID.getText();
       
        String ReturnBook = "NO";
        boolean studentid = true;
         if (bkID.getText().equals("") || stdID.getText().equals("")) {

                JOptionPane.showMessageDialog(null, "field must not be empty");

                return;

            } 
        for (int i = 0; i < studentID.length(); i++) {

            if (!(studentID.charAt(i) >= '0' && studentID.charAt(i) <= '9')) {

                studentid = false;

                JOptionPane.showMessageDialog(null, "Student id is invalid");

                return;

            }

        }
         String issueDate = dFormat.format(issueDt.getDate());
        String dueDate = dFormat.format(dueDt.getDate());
        try {
            
                Connection con = ConnectionProvider.getCon();

                Statement st = con.createStatement();
                Statement st2 = con.createStatement();
                Statement st3 = con.createStatement();
                ResultSet rs3 = st3.executeQuery("SELECT COUNT(Book_ID) FROM issuedbooks WHERE Return_Book='NO' AND Student_ID = " + studentID);
                int limit = 0;
                if (rs3.next()) {
                    limit = rs3.getInt(1);
                }
                if (limit >= 2) {

                    JOptionPane.showMessageDialog(null, "Can not issue more than two  books");

                    return;
                }
                ResultSet rs2 = st2.executeQuery("SELECT COUNT(Book_ID) FROM issuedbooks WHERE Book_ID = " + BookId + " AND Return_Book ='NO'");
                int k = 0;
                if (rs2.next()) {

                    k = rs2.getInt(1);
                }
                ResultSet rs = st.executeQuery("SELECT * FROM newbook WHERE BookId ='" + BookId + "'");
                if (k > 0) {
                    JOptionPane.showMessageDialog(null, "The Book is unavailable");
                } else if (rs.next()) {
                    ResultSet rs1 = st.executeQuery("select *from studentinfo where studentID ='" + studentID + "'");
                    if (rs1.next()) {
                        st.executeUpdate("Insert Into issuedBooks  VALUES ('" + BookId + "','" + studentID + "','" + issueDate + "','" + dueDate + "','" + ReturnBook + "')");
                        JOptionPane.showMessageDialog(null, "Book Successfully issued");
                        setVisible(false);
                        new issueBook().setVisible(true);
                    } else {
                        JOptionPane.showMessageDialog(null, "Incorrect Student ID");
                    }
                } else {
                    ResultSet rs1 = st.executeQuery("select *from studentinfo where studentID ='" + studentID + "'");
                    if (rs1.next()) {
                        JOptionPane.showMessageDialog(null, "Incorrect Book ID");

                    } else {
                        JOptionPane.showMessageDialog(null, "Invalid Issue");
                    }

                }
            
        } catch (Exception e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(null, "connection error");
        }
        {

            setVisible(false);
            new issueBook().setVisible(true);
        }
    }//GEN-LAST:event_issueButtonActionPerformed

    private void BtndueBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtndueBookActionPerformed
        try {
            if (stdID.getText().equals("")) {

                JOptionPane.showMessageDialog(null, "field must not be empty");

                return;

            } else {
                duestudents.studentID = stdID.getText();
                Connection con = ConnectionProvider.getCon();
                Statement s = con.createStatement();
                ResultSet r = s.executeQuery("SELECT * FROM issuedbooks WHERE student_ID = " + stdID.getText() + " AND Return_Book = 'NO'");
                if (r.next()) {

                    new duestudents().setVisible(true);
                } else {
                    JOptionPane.showMessageDialog(null, "No Books Due");

                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(issueBook.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_BtndueBookActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(issueBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(issueBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(issueBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(issueBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new issueBook().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtndueBook;
    private javax.swing.JTextField bkID;
    private javax.swing.JButton closeButton;
    private com.toedter.calendar.JDateChooser dueDt;
    private javax.swing.JButton issueButton;
    private com.toedter.calendar.JDateChooser issueDt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField stdID;
    // End of variables declaration//GEN-END:variables
}
